-- MySQL Script generated by MySQL Workbench
-- Mon Oct 14 08:53:55 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`cinema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cinema` (
  `id` INT NOT NULL,
  `movietitle` VARCHAR(45) NOT NULL,
  `moviesched` VARCHAR(45) NOT NULL,
  `movieduration` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`account` (
  `id` INT NOT NULL,
  `accountpass` VARCHAR(45) NOT NULL,
  `accountemail` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`store branch manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`store branch manager` (
  `id` INT NOT NULL,
  `sbfirstname` VARCHAR(45) NOT NULL,
  `sbsurname` VARCHAR(45) NOT NULL,
  `sbbday` DATE NOT NULL,
  `sbage` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food company supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food company supplier` (
  `id` INT NOT NULL,
  `companyname` VARCHAR(45) NOT NULL,
  `companyinsurance` VARCHAR(45) NOT NULL,
  `companycontactno` VARCHAR(45) NOT NULL,
  `companyaddress` VARCHAR(45) NOT NULL,
  `store branch manager_id` INT NOT NULL,
  PRIMARY KEY (`id`, `store branch manager_id`),
  INDEX `fk_food company supplier_store branch manager1_idx` (`store branch manager_id` ASC) VISIBLE,
  CONSTRAINT `fk_food company supplier_store branch manager1`
    FOREIGN KEY (`store branch manager_id`)
    REFERENCES `mydb`.`store branch manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`branch` (
  `id` INT NOT NULL,
  `branchaddress` VARCHAR(45) NOT NULL,
  `food company supplier_id` INT NOT NULL,
  `food company supplier_store branch manager_id` INT NOT NULL,
  PRIMARY KEY (`id`, `food company supplier_id`, `food company supplier_store branch manager_id`),
  INDEX `fk_branch_food company supplier1_idx` (`food company supplier_id` ASC, `food company supplier_store branch manager_id` ASC) VISIBLE,
  CONSTRAINT `fk_branch_food company supplier1`
    FOREIGN KEY (`food company supplier_id` , `food company supplier_store branch manager_id`)
    REFERENCES `mydb`.`food company supplier` (`id` , `store branch manager_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`customer` (
  `id` INT NOT NULL,
  `custfirstname` VARCHAR(45) NOT NULL,
  `custlastname` VARCHAR(45) NOT NULL,
  `custtype` VARCHAR(45) NOT NULL,
  `custbday` VARCHAR(45) NOT NULL,
  `cinema_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  `branch_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cinema_id`, `account_id`, `branch_id`),
  INDEX `fk_customer_cinema1_idx` (`cinema_id` ASC) VISIBLE,
  INDEX `fk_customer_account1_idx` (`account_id` ASC) VISIBLE,
  INDEX `fk_customer_branch1_idx` (`branch_id` ASC) VISIBLE,
  CONSTRAINT `fk_customer_cinema1`
    FOREIGN KEY (`cinema_id`)
    REFERENCES `mydb`.`cinema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `mydb`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_branch1`
    FOREIGN KEY (`branch_id`)
    REFERENCES `mydb`.`branch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cashier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cashier` (
  `id` INT NOT NULL,
  `cashier_firstname` VARCHAR(45) NOT NULL,
  `cashier_lastname` VARCHAR(45) NOT NULL,
  `cashier_age` INT NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`, `customer_id`),
  INDEX `fk_cashier_customer1_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_cashier_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `mydb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`porter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`porter` (
  `id` INT NOT NULL,
  `porter_firstname` VARCHAR(45) NOT NULL,
  `porter_lastname` VARCHAR(45) NOT NULL,
  `porter_age` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ticket` (
  `id` INT NOT NULL,
  `custid` INT NOT NULL,
  `movietitle` VARCHAR(45) NOT NULL,
  `moviesched` VARCHAR(45) NOT NULL,
  `movieduration` INT NOT NULL,
  `dateofpurchase` DATE NOT NULL,
  `cashier_id` INT NOT NULL,
  `cashier_customer_id` INT NOT NULL,
  `porter_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `customer_cinema_id` INT NOT NULL,
  `customer_account_id` INT NOT NULL,
  `customer_branch_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cashier_id`, `cashier_customer_id`, `porter_id`, `customer_id`, `customer_cinema_id`, `customer_account_id`, `customer_branch_id`),
  INDEX `fk_ticket_cashier1_idx` (`cashier_id` ASC, `cashier_customer_id` ASC) VISIBLE,
  INDEX `fk_ticket_porter1_idx` (`porter_id` ASC) VISIBLE,
  INDEX `fk_ticket_customer1_idx` (`customer_id` ASC, `customer_cinema_id` ASC, `customer_account_id` ASC, `customer_branch_id` ASC) VISIBLE,
  CONSTRAINT `fk_ticket_cashier1`
    FOREIGN KEY (`cashier_id` , `cashier_customer_id`)
    REFERENCES `mydb`.`cashier` (`id` , `customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_porter1`
    FOREIGN KEY (`porter_id`)
    REFERENCES `mydb`.`porter` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_customer1`
    FOREIGN KEY (`customer_id` , `customer_cinema_id` , `customer_account_id` , `customer_branch_id`)
    REFERENCES `mydb`.`customer` (`id` , `cinema_id` , `account_id` , `branch_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movie` (
  `id` INT NOT NULL,
  `movietitle` VARCHAR(45) NOT NULL,
  `movietype` VARCHAR(45) NOT NULL,
  `moviesched` VARCHAR(45) NOT NULL,
  `moviegenre` VARCHAR(45) NOT NULL,
  `cinemano` INT NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_movie_customer_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `mydb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment` (
  `id` INT NOT NULL,
  `payment_amnt` INT NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_payment_customer1_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_payment_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `mydb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food` (
  `id` INT NOT NULL,
  `foodtype` VARCHAR(45) NOT NULL,
  `porter_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `customer_cinema_id` INT NOT NULL,
  `customer_account_id` INT NOT NULL,
  `customer_branch_id` INT NOT NULL,
  PRIMARY KEY (`id`, `porter_id`, `customer_id`, `customer_cinema_id`, `customer_account_id`, `customer_branch_id`),
  INDEX `fk_food_porter1_idx` (`porter_id` ASC) VISIBLE,
  INDEX `fk_food_customer1_idx` (`customer_id` ASC, `customer_cinema_id` ASC, `customer_account_id` ASC, `customer_branch_id` ASC) VISIBLE,
  CONSTRAINT `fk_food_porter1`
    FOREIGN KEY (`porter_id`)
    REFERENCES `mydb`.`porter` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_food_customer1`
    FOREIGN KEY (`customer_id` , `customer_cinema_id` , `customer_account_id` , `customer_branch_id`)
    REFERENCES `mydb`.`customer` (`id` , `cinema_id` , `account_id` , `branch_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`employee` (
  `id` INT NOT NULL,
  `employeetype` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`inventory` (
  `id` INT NOT NULL,
  `foodstockitems` INT NULL,
  `drinkstockitems` INT NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`id`, `employee_id`),
  INDEX `fk_inventory_employee1_idx` (`employee_id` ASC) VISIBLE,
  CONSTRAINT `fk_inventory_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `mydb`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food supplies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food supplies` (
  `id` INT NOT NULL,
  `stock_burger` INT NOT NULL,
  `stock_burgerpatty` INT NOT NULL,
  `stock_popcorn` INT NOT NULL,
  `stock_sandwich` INT NOT NULL,
  `stock_junkfoods` INT NOT NULL,
  `stock_softdrink` INT NOT NULL,
  `store branch manager_id` INT NOT NULL,
  PRIMARY KEY (`id`, `store branch manager_id`),
  INDEX `fk_food supplies_store branch manager1_idx` (`store branch manager_id` ASC) VISIBLE,
  CONSTRAINT `fk_food supplies_store branch manager1`
    FOREIGN KEY (`store branch manager_id`)
    REFERENCES `mydb`.`store branch manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`deliver receipts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`deliver receipts` (
  `id` INT NOT NULL,
  `companyname` VARCHAR(45) NOT NULL,
  `companycontactno` VARCHAR(45) NOT NULL,
  `companyaddress` VARCHAR(45) NOT NULL,
  `dateoforder` DATE NOT NULL,
  `` VARCHAR(45) NULL,
  `store branch manager_id` INT NOT NULL,
  PRIMARY KEY (`id`, `store branch manager_id`),
  INDEX `fk_deliver receipts_store branch manager1_idx` (`store branch manager_id` ASC) VISIBLE,
  CONSTRAINT `fk_deliver receipts_store branch manager1`
    FOREIGN KEY (`store branch manager_id`)
    REFERENCES `mydb`.`store branch manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
